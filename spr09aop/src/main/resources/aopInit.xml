<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- Target -->
	<bean id="targetBean" class="pack.MessageImpl">
		<property name="name" value="스프링" />
	</bean>
	
	<!-- Advice(Aspect) : Target으로 weaving -->
	<bean id="myAdvice" class="aspect.MyAdvice"/>
	
	<!-- 
	proxy를 통한 간접 접근 : 메소드 호출 또는 공통 기능 등을 수행 
	어플리케이션과 AOP 설정을 직접 연계하지 않더라도 유연한 프로그래밍이 가능
	-->
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<ref bean="targetBean"/>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hiAdvisor</value>		<!-- Advisor를 적어줌 -->
			</list>
		</property>
	</bean>
	
	<!-- Advisor (advice + pointcut) -->
	<bean id="hiAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice">
			<ref bean="myAdvice" />
		</property>
		<property name="pointcut">
			<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">
				<property name="pattern">
					<value>.*sayHi*.</value>	<!-- 메소드 이름에 *안의 문장(sayHi)이 포함되어있으면 pointcut 대상으로 지정 -->
				</property>
			</bean>
		</property>
	</bean>
	
</beans>